// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Protocol {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class ProtoServer {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_Protocol_BattleGetRoomInfoReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleGetRoomInfoReq, global::Protocol.BattleGetRoomInfoReq.Builder> internal__static_Protocol_BattleGetRoomInfoReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Protocol_BattleGetRoomInfoReq_Callback__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleGetRoomInfoReq.Types.Callback, global::Protocol.BattleGetRoomInfoReq.Types.Callback.Builder> internal__static_Protocol_BattleGetRoomInfoReq_Callback__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Protocol_BattleOnInitReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleOnInitReq, global::Protocol.BattleOnInitReq.Builder> internal__static_Protocol_BattleOnInitReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Protocol_BattleOnInitReq_Callback__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleOnInitReq.Types.Callback, global::Protocol.BattleOnInitReq.Types.Callback.Builder> internal__static_Protocol_BattleOnInitReq_Callback__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Protocol_BattleOnStartReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleOnStartReq, global::Protocol.BattleOnStartReq.Builder> internal__static_Protocol_BattleOnStartReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Protocol_BattleOnStartReq_Callback__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleOnStartReq.Types.Callback, global::Protocol.BattleOnStartReq.Types.Callback.Builder> internal__static_Protocol_BattleOnStartReq_Callback__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Protocol_BattleOnSettlementReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleOnSettlementReq, global::Protocol.BattleOnSettlementReq.Builder> internal__static_Protocol_BattleOnSettlementReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Protocol_BattleOnSettlementReq_Callback__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleOnSettlementReq.Types.Callback, global::Protocol.BattleOnSettlementReq.Types.Callback.Builder> internal__static_Protocol_BattleOnSettlementReq_Callback__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Protocol_BattleOnEndReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleOnEndReq, global::Protocol.BattleOnEndReq.Builder> internal__static_Protocol_BattleOnEndReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Protocol_BattleOnEndReq_Callback__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleOnEndReq.Types.Callback, global::Protocol.BattleOnEndReq.Types.Callback.Builder> internal__static_Protocol_BattleOnEndReq_Callback__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Protocol_BattleOnExitReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleOnExitReq, global::Protocol.BattleOnExitReq.Builder> internal__static_Protocol_BattleOnExitReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Protocol_BattleOnExitReq_Callback__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleOnExitReq.Types.Callback, global::Protocol.BattleOnExitReq.Types.Callback.Builder> internal__static_Protocol_BattleOnExitReq_Callback__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Protocol_ShutdownServerNtf__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protocol.ShutdownServerNtf, global::Protocol.ShutdownServerNtf.Builder> internal__static_Protocol_ShutdownServerNtf__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ProtoServer() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJwcm90b19zZXJ2ZXIucHJvdG8SCFByb3RvY29sGhVwcm90b19kYXRhbW9k", 
            "ZWwucHJvdG8irgEKFEJhdHRsZUdldFJvb21JbmZvUmVxEkQKCGNhbGxiYWNr", 
            "GP8BIAEoCzInLlByb3RvY29sLkJhdHRsZUdldFJvb21JbmZvUmVxLkNhbGxi", 
            "YWNrUghjYWxsYmFjaxpQCghDYWxsYmFjaxIOCgJvaxgBIAEoCFICb2sSEAoD", 
            "bXNnGAIgASgJUgNtc2cSIgoEcm9vbRgDIAEoCzIOLlByb3RvY29sLlJvb21S", 
            "BHJvb20ipAEKD0JhdHRsZU9uSW5pdFJlcRI/CghjYWxsYmFjaxj/ASABKAsy", 
            "Ii5Qcm90b2NvbC5CYXR0bGVPbkluaXRSZXEuQ2FsbGJhY2tSCGNhbGxiYWNr", 
            "GlAKCENhbGxiYWNrEg4KAm9rGAEgASgIUgJvaxIQCgNtc2cYAiABKAlSA21z", 
            "ZxIiCgRyb29tGAMgASgLMg4uUHJvdG9jb2wuUm9vbVIEcm9vbSKCAQoQQmF0", 
            "dGxlT25TdGFydFJlcRJACghjYWxsYmFjaxj/ASABKAsyIy5Qcm90b2NvbC5C", 
            "YXR0bGVPblN0YXJ0UmVxLkNhbGxiYWNrUghjYWxsYmFjaxosCghDYWxsYmFj", 
            "axIOCgJvaxgBIAEoCFICb2sSEAoDbXNnGAIgASgJUgNtc2ciyAEKFUJhdHRs", 
            "ZU9uU2V0dGxlbWVudFJlcRJFCghjYWxsYmFjaxj/ASABKAsyKC5Qcm90b2Nv", 
            "bC5CYXR0bGVPblNldHRsZW1lbnRSZXEuQ2FsbGJhY2tSCGNhbGxiYWNrGmgK", 
            "CENhbGxiYWNrEg4KAm9rGAEgASgIUgJvaxIQCgNtc2cYAiABKAlSA21zZxI6", 
            "CgpzZXR0bGVtZW50GAMgASgLMhouUHJvdG9jb2wuU2V0dGxlbWVudFJlc3Vs", 
            "dFIKc2V0dGxlbWVudCJ+Cg5CYXR0bGVPbkVuZFJlcRI+CghjYWxsYmFjaxj/", 
            "ASABKAsyIS5Qcm90b2NvbC5CYXR0bGVPbkVuZFJlcS5DYWxsYmFja1IIY2Fs", 
            "bGJhY2saLAoIQ2FsbGJhY2sSDgoCb2sYASABKAhSAm9rEhAKA21zZxgCIAEo", 
            "CVIDbXNnIoABCg9CYXR0bGVPbkV4aXRSZXESPwoIY2FsbGJhY2sY/wEgASgL", 
            "MiIuUHJvdG9jb2wuQmF0dGxlT25FeGl0UmVxLkNhbGxiYWNrUghjYWxsYmFj", 
            "axosCghDYWxsYmFjaxIOCgJvaxgBIAEoCFICb2sSEAoDbXNnGAIgASgJUgNt", 
          "c2ciEwoRU2h1dGRvd25TZXJ2ZXJOdGY="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Protocol_BattleGetRoomInfoReq__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Protocol_BattleGetRoomInfoReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleGetRoomInfoReq, global::Protocol.BattleGetRoomInfoReq.Builder>(internal__static_Protocol_BattleGetRoomInfoReq__Descriptor,
                new string[] { "Callback", });
        internal__static_Protocol_BattleGetRoomInfoReq_Callback__Descriptor = internal__static_Protocol_BattleGetRoomInfoReq__Descriptor.NestedTypes[0];
        internal__static_Protocol_BattleGetRoomInfoReq_Callback__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleGetRoomInfoReq.Types.Callback, global::Protocol.BattleGetRoomInfoReq.Types.Callback.Builder>(internal__static_Protocol_BattleGetRoomInfoReq_Callback__Descriptor,
                new string[] { "Ok", "Msg", "Room", });
        internal__static_Protocol_BattleOnInitReq__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Protocol_BattleOnInitReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleOnInitReq, global::Protocol.BattleOnInitReq.Builder>(internal__static_Protocol_BattleOnInitReq__Descriptor,
                new string[] { "Callback", });
        internal__static_Protocol_BattleOnInitReq_Callback__Descriptor = internal__static_Protocol_BattleOnInitReq__Descriptor.NestedTypes[0];
        internal__static_Protocol_BattleOnInitReq_Callback__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleOnInitReq.Types.Callback, global::Protocol.BattleOnInitReq.Types.Callback.Builder>(internal__static_Protocol_BattleOnInitReq_Callback__Descriptor,
                new string[] { "Ok", "Msg", "Room", });
        internal__static_Protocol_BattleOnStartReq__Descriptor = Descriptor.MessageTypes[2];
        internal__static_Protocol_BattleOnStartReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleOnStartReq, global::Protocol.BattleOnStartReq.Builder>(internal__static_Protocol_BattleOnStartReq__Descriptor,
                new string[] { "Callback", });
        internal__static_Protocol_BattleOnStartReq_Callback__Descriptor = internal__static_Protocol_BattleOnStartReq__Descriptor.NestedTypes[0];
        internal__static_Protocol_BattleOnStartReq_Callback__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleOnStartReq.Types.Callback, global::Protocol.BattleOnStartReq.Types.Callback.Builder>(internal__static_Protocol_BattleOnStartReq_Callback__Descriptor,
                new string[] { "Ok", "Msg", });
        internal__static_Protocol_BattleOnSettlementReq__Descriptor = Descriptor.MessageTypes[3];
        internal__static_Protocol_BattleOnSettlementReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleOnSettlementReq, global::Protocol.BattleOnSettlementReq.Builder>(internal__static_Protocol_BattleOnSettlementReq__Descriptor,
                new string[] { "Callback", });
        internal__static_Protocol_BattleOnSettlementReq_Callback__Descriptor = internal__static_Protocol_BattleOnSettlementReq__Descriptor.NestedTypes[0];
        internal__static_Protocol_BattleOnSettlementReq_Callback__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleOnSettlementReq.Types.Callback, global::Protocol.BattleOnSettlementReq.Types.Callback.Builder>(internal__static_Protocol_BattleOnSettlementReq_Callback__Descriptor,
                new string[] { "Ok", "Msg", "Settlement", });
        internal__static_Protocol_BattleOnEndReq__Descriptor = Descriptor.MessageTypes[4];
        internal__static_Protocol_BattleOnEndReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleOnEndReq, global::Protocol.BattleOnEndReq.Builder>(internal__static_Protocol_BattleOnEndReq__Descriptor,
                new string[] { "Callback", });
        internal__static_Protocol_BattleOnEndReq_Callback__Descriptor = internal__static_Protocol_BattleOnEndReq__Descriptor.NestedTypes[0];
        internal__static_Protocol_BattleOnEndReq_Callback__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleOnEndReq.Types.Callback, global::Protocol.BattleOnEndReq.Types.Callback.Builder>(internal__static_Protocol_BattleOnEndReq_Callback__Descriptor,
                new string[] { "Ok", "Msg", });
        internal__static_Protocol_BattleOnExitReq__Descriptor = Descriptor.MessageTypes[5];
        internal__static_Protocol_BattleOnExitReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleOnExitReq, global::Protocol.BattleOnExitReq.Builder>(internal__static_Protocol_BattleOnExitReq__Descriptor,
                new string[] { "Callback", });
        internal__static_Protocol_BattleOnExitReq_Callback__Descriptor = internal__static_Protocol_BattleOnExitReq__Descriptor.NestedTypes[0];
        internal__static_Protocol_BattleOnExitReq_Callback__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleOnExitReq.Types.Callback, global::Protocol.BattleOnExitReq.Types.Callback.Builder>(internal__static_Protocol_BattleOnExitReq_Callback__Descriptor,
                new string[] { "Ok", "Msg", });
        internal__static_Protocol_ShutdownServerNtf__Descriptor = Descriptor.MessageTypes[6];
        internal__static_Protocol_ShutdownServerNtf__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protocol.ShutdownServerNtf, global::Protocol.ShutdownServerNtf.Builder>(internal__static_Protocol_ShutdownServerNtf__Descriptor,
                new string[] { });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::Protocol.ProtoDatamodel.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Protocol.ProtoDatamodel.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BattleGetRoomInfoReq : pb::GeneratedMessage<BattleGetRoomInfoReq, BattleGetRoomInfoReq.Builder> {
    public BattleGetRoomInfoReq() { }
    private static readonly BattleGetRoomInfoReq defaultInstance = new BattleGetRoomInfoReq().MakeReadOnly();
    private static readonly string[] _battleGetRoomInfoReqFieldNames = new string[] { "callback" };
    private static readonly uint[] _battleGetRoomInfoReqFieldTags = new uint[] { 2042 };
    public static BattleGetRoomInfoReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BattleGetRoomInfoReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BattleGetRoomInfoReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleGetRoomInfoReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BattleGetRoomInfoReq, BattleGetRoomInfoReq.Builder> InternalFieldAccessors {
      get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleGetRoomInfoReq__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Callback : pb::GeneratedMessage<Callback, Callback.Builder> {
        public Callback() { }
        private static readonly Callback defaultInstance = new Callback().MakeReadOnly();
        private static readonly string[] _callbackFieldNames = new string[] { "msg", "ok", "room" };
        private static readonly uint[] _callbackFieldTags = new uint[] { 18, 8, 26 };
        public static Callback DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override Callback DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override Callback ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleGetRoomInfoReq_Callback__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<Callback, Callback.Builder> InternalFieldAccessors {
          get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleGetRoomInfoReq_Callback__FieldAccessorTable; }
        }
        
        public const int OkFieldNumber = 1;
        private bool hasOk;
        private bool isOkChanged = true;
        private bool ok_;
        public bool HasOk {
          get { return hasOk; }
        }
        public bool Ok {
          get { return ok_; }
          set { hasOk = true;
            isOkChanged = true;
            ok_ = value;}
        }
        
        public const int MsgFieldNumber = 2;
        private bool hasMsg;
        private bool isMsgChanged = true;
        private string msg_ = "";
        public bool HasMsg {
          get { return hasMsg; }
        }
        public string Msg {
          get { return msg_; }
          set { hasMsg = true;
            isMsgChanged = true;
            msg_ = value;}
        }
        
        public const int RoomFieldNumber = 3;
        private bool hasRoom;
        private global::Protocol.Room room_;
        public bool HasRoom {
          get { return hasRoom; }
        }
        public global::Protocol.Room Room {
          get { return room_; }
          set { hasRoom = true;
            room_ = value;}
        }
        public void MergeRoom(global::Protocol.Room value, bool isFull = false) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          if (HasRoom &&
            room_ != global::Protocol.Room.DefaultInstance) {
            room_.MergeFrom(value, isFull);
          } else {
            room_ = value;
          }
        }
        
        public override bool IsInitialized {
          get {
            if (HasRoom) {
              if (!Room.IsInitialized) return false;
            }
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _callbackFieldNames;
          if (hasOk) {
            output.WriteBool(1, field_names[1], Ok);
          }
          if (hasMsg) {
            output.WriteString(2, field_names[0], Msg);
          }
          if (hasRoom) {
            output.WriteMessage(3, field_names[2], Room);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = 0;
          if (hasOk) {
            size += pb::CodedOutputStream.ComputeBoolSize(1, Ok);
          }
          if (hasMsg) {
            size += pb::CodedOutputStream.ComputeStringSize(2, Msg);
          }
          if (hasRoom) {
            size += pb::CodedOutputStream.ComputeMessageSize(3, Room);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        
        public Callback CommitChange() {
          Callback other = new Callback();
          bool isChange = false;
          if (isOkChanged) {
            isChange = true;
            other.Ok = Ok;
            isOkChanged = false;
          }
          if (isMsgChanged) {
            isChange = true;
            other.Msg = Msg;
            isMsgChanged = false;
          }
          
          var Roomcommit = Room?.CommitChange();
          if(Roomcommit!=null)
          {
              isChange = true;
              other.Room = Roomcommit;
          }
          return isChange?other:null;
        }
        
        public void MergeFrom(Callback other, bool isFull = false) {
          if (other == global::Protocol.BattleGetRoomInfoReq.Types.Callback.DefaultInstance) return;
          if (other.HasOk) {
            Ok = other.Ok;
          }
          if (other.HasMsg) {
            Msg = other.Msg;
          }
          
          if (other.HasRoom)
          {
            MergeRoom(other.Room, isFull);
          }
        }
        
        public static Callback ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Callback ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Callback ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Callback ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Callback ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Callback ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static Callback ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static Callback ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static Callback ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Callback ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private Callback MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(Callback prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<Callback, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(Callback cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private Callback result;
          
          private Callback PrepareBuilder() {
            if (resultIsReadOnly) {
              Callback original = result;
              result = new Callback();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override Callback MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::Protocol.BattleGetRoomInfoReq.Types.Callback.Descriptor; }
          }
          
          public override Callback DefaultInstanceForType {
            get { return global::Protocol.BattleGetRoomInfoReq.Types.Callback.DefaultInstance; }
          }
          
          public override Callback BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is Callback) {
              return MergeFrom((Callback) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(Callback other) {
            if (other == global::Protocol.BattleGetRoomInfoReq.Types.Callback.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasOk) {
              Ok = other.Ok;
            }
            if (other.HasMsg) {
              Msg = other.Msg;
            }
            if (other.HasRoom) {
              MergeRoom(other.Room);
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_callbackFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _callbackFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasOk = input.ReadBool(ref result.ok_);
                  break;
                }
                case 18: {
                  result.hasMsg = input.ReadString(ref result.msg_);
                  break;
                }
                case 26: {
                  global::Protocol.Room.Builder subBuilder = global::Protocol.Room.CreateBuilder();
                  if (result.hasRoom) {
                    subBuilder.MergeFrom(Room);
                  }
                  input.ReadMessage(subBuilder, extensionRegistry);
                  Room = subBuilder.BuildPartial();
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasOk {
            get { return result.hasOk; }
          }
          public bool Ok {
            get { return result.Ok; }
            set { SetOk(value); }
          }
          public Builder SetOk(bool value) {
            PrepareBuilder();
            result.hasOk = true;
            result.ok_ = value;
            return this;
          }
          public Builder ClearOk() {
            PrepareBuilder();
            result.hasOk = false;
            result.ok_ = false;
            return this;
          }
          
          public bool HasMsg {
            get { return result.hasMsg; }
          }
          public string Msg {
            get { return result.Msg; }
            set { SetMsg(value); }
          }
          public Builder SetMsg(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasMsg = true;
            result.msg_ = value;
            return this;
          }
          public Builder ClearMsg() {
            PrepareBuilder();
            result.hasMsg = false;
            result.msg_ = "";
            return this;
          }
          
          public bool HasRoom {
           get { return result.hasRoom; }
          }
          public global::Protocol.Room Room {
            get { return result.Room; }
            set { SetRoom(value); }
          }
          public Builder SetRoom(global::Protocol.Room value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasRoom = true;
            result.room_ = value;
            return this;
          }
          public Builder SetRoom(global::Protocol.Room.Builder builderForValue) {
            pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
            PrepareBuilder();
            result.hasRoom = true;
            result.room_ = builderForValue.Build();
            return this;
          }
          public Builder MergeRoom(global::Protocol.Room value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            if (result.HasRoom &&
                result.room_ != global::Protocol.Room.DefaultInstance) {
                result.room_ = global::Protocol.Room.CreateBuilder(result.room_).MergeFrom(value).BuildPartial();
            } else {
              result.room_ = value;
              result.hasRoom = true;
            }
            return this;
          }
          public Builder ClearRoom() {
            PrepareBuilder();
            result.hasRoom = false;
            result.room_ = null;
            return this;
          }
        }
        static Callback() {
          object.ReferenceEquals(global::Protocol.ProtoServer.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int CallbackFieldNumber = 255;
    private bool hasCallback;
    private global::Protocol.BattleGetRoomInfoReq.Types.Callback callback_;
    public bool HasCallback {
      get { return hasCallback; }
    }
    public global::Protocol.BattleGetRoomInfoReq.Types.Callback Callback {
      get { return callback_; }
      set { hasCallback = true;
        callback_ = value;}
    }
    public void MergeCallback(global::Protocol.BattleGetRoomInfoReq.Types.Callback value, bool isFull = false) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      if (HasCallback &&
        callback_ != global::Protocol.BattleGetRoomInfoReq.Types.Callback.DefaultInstance) {
        callback_.MergeFrom(value, isFull);
      } else {
        callback_ = value;
      }
    }
    
    public override bool IsInitialized {
      get {
        if (HasCallback) {
          if (!Callback.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _battleGetRoomInfoReqFieldNames;
      if (hasCallback) {
        output.WriteMessage(255, field_names[0], Callback);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = 0;
      if (hasCallback) {
        size += pb::CodedOutputStream.ComputeMessageSize(255, Callback);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    
    public BattleGetRoomInfoReq CommitChange() {
      BattleGetRoomInfoReq other = new BattleGetRoomInfoReq();
      bool isChange = false;
      
      var Callbackcommit = Callback?.CommitChange();
      if(Callbackcommit!=null)
      {
          isChange = true;
          other.Callback = Callbackcommit;
      }
      return isChange?other:null;
    }
    
    public void MergeFrom(BattleGetRoomInfoReq other, bool isFull = false) {
      if (other == global::Protocol.BattleGetRoomInfoReq.DefaultInstance) return;
      
      if (other.HasCallback)
      {
        MergeCallback(other.Callback, isFull);
      }
    }
    
    public static BattleGetRoomInfoReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BattleGetRoomInfoReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BattleGetRoomInfoReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BattleGetRoomInfoReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BattleGetRoomInfoReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BattleGetRoomInfoReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BattleGetRoomInfoReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BattleGetRoomInfoReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BattleGetRoomInfoReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BattleGetRoomInfoReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BattleGetRoomInfoReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BattleGetRoomInfoReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BattleGetRoomInfoReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BattleGetRoomInfoReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BattleGetRoomInfoReq result;
      
      private BattleGetRoomInfoReq PrepareBuilder() {
        if (resultIsReadOnly) {
          BattleGetRoomInfoReq original = result;
          result = new BattleGetRoomInfoReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BattleGetRoomInfoReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Protocol.BattleGetRoomInfoReq.Descriptor; }
      }
      
      public override BattleGetRoomInfoReq DefaultInstanceForType {
        get { return global::Protocol.BattleGetRoomInfoReq.DefaultInstance; }
      }
      
      public override BattleGetRoomInfoReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BattleGetRoomInfoReq) {
          return MergeFrom((BattleGetRoomInfoReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BattleGetRoomInfoReq other) {
        if (other == global::Protocol.BattleGetRoomInfoReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCallback) {
          MergeCallback(other.Callback);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_battleGetRoomInfoReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _battleGetRoomInfoReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 2042: {
              global::Protocol.BattleGetRoomInfoReq.Types.Callback.Builder subBuilder = global::Protocol.BattleGetRoomInfoReq.Types.Callback.CreateBuilder();
              if (result.hasCallback) {
                subBuilder.MergeFrom(Callback);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Callback = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCallback {
       get { return result.hasCallback; }
      }
      public global::Protocol.BattleGetRoomInfoReq.Types.Callback Callback {
        get { return result.Callback; }
        set { SetCallback(value); }
      }
      public Builder SetCallback(global::Protocol.BattleGetRoomInfoReq.Types.Callback value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCallback = true;
        result.callback_ = value;
        return this;
      }
      public Builder SetCallback(global::Protocol.BattleGetRoomInfoReq.Types.Callback.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCallback = true;
        result.callback_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCallback(global::Protocol.BattleGetRoomInfoReq.Types.Callback value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.HasCallback &&
            result.callback_ != global::Protocol.BattleGetRoomInfoReq.Types.Callback.DefaultInstance) {
            result.callback_ = global::Protocol.BattleGetRoomInfoReq.Types.Callback.CreateBuilder(result.callback_).MergeFrom(value).BuildPartial();
        } else {
          result.callback_ = value;
          result.hasCallback = true;
        }
        return this;
      }
      public Builder ClearCallback() {
        PrepareBuilder();
        result.hasCallback = false;
        result.callback_ = null;
        return this;
      }
    }
    static BattleGetRoomInfoReq() {
      object.ReferenceEquals(global::Protocol.ProtoServer.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BattleOnInitReq : pb::GeneratedMessage<BattleOnInitReq, BattleOnInitReq.Builder> {
    public BattleOnInitReq() { }
    private static readonly BattleOnInitReq defaultInstance = new BattleOnInitReq().MakeReadOnly();
    private static readonly string[] _battleOnInitReqFieldNames = new string[] { "callback" };
    private static readonly uint[] _battleOnInitReqFieldTags = new uint[] { 2042 };
    public static BattleOnInitReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BattleOnInitReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BattleOnInitReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleOnInitReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BattleOnInitReq, BattleOnInitReq.Builder> InternalFieldAccessors {
      get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleOnInitReq__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Callback : pb::GeneratedMessage<Callback, Callback.Builder> {
        public Callback() { }
        private static readonly Callback defaultInstance = new Callback().MakeReadOnly();
        private static readonly string[] _callbackFieldNames = new string[] { "msg", "ok", "room" };
        private static readonly uint[] _callbackFieldTags = new uint[] { 18, 8, 26 };
        public static Callback DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override Callback DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override Callback ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleOnInitReq_Callback__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<Callback, Callback.Builder> InternalFieldAccessors {
          get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleOnInitReq_Callback__FieldAccessorTable; }
        }
        
        public const int OkFieldNumber = 1;
        private bool hasOk;
        private bool isOkChanged = true;
        private bool ok_;
        public bool HasOk {
          get { return hasOk; }
        }
        public bool Ok {
          get { return ok_; }
          set { hasOk = true;
            isOkChanged = true;
            ok_ = value;}
        }
        
        public const int MsgFieldNumber = 2;
        private bool hasMsg;
        private bool isMsgChanged = true;
        private string msg_ = "";
        public bool HasMsg {
          get { return hasMsg; }
        }
        public string Msg {
          get { return msg_; }
          set { hasMsg = true;
            isMsgChanged = true;
            msg_ = value;}
        }
        
        public const int RoomFieldNumber = 3;
        private bool hasRoom;
        private global::Protocol.Room room_;
        public bool HasRoom {
          get { return hasRoom; }
        }
        public global::Protocol.Room Room {
          get { return room_; }
          set { hasRoom = true;
            room_ = value;}
        }
        public void MergeRoom(global::Protocol.Room value, bool isFull = false) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          if (HasRoom &&
            room_ != global::Protocol.Room.DefaultInstance) {
            room_.MergeFrom(value, isFull);
          } else {
            room_ = value;
          }
        }
        
        public override bool IsInitialized {
          get {
            if (HasRoom) {
              if (!Room.IsInitialized) return false;
            }
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _callbackFieldNames;
          if (hasOk) {
            output.WriteBool(1, field_names[1], Ok);
          }
          if (hasMsg) {
            output.WriteString(2, field_names[0], Msg);
          }
          if (hasRoom) {
            output.WriteMessage(3, field_names[2], Room);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = 0;
          if (hasOk) {
            size += pb::CodedOutputStream.ComputeBoolSize(1, Ok);
          }
          if (hasMsg) {
            size += pb::CodedOutputStream.ComputeStringSize(2, Msg);
          }
          if (hasRoom) {
            size += pb::CodedOutputStream.ComputeMessageSize(3, Room);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        
        public Callback CommitChange() {
          Callback other = new Callback();
          bool isChange = false;
          if (isOkChanged) {
            isChange = true;
            other.Ok = Ok;
            isOkChanged = false;
          }
          if (isMsgChanged) {
            isChange = true;
            other.Msg = Msg;
            isMsgChanged = false;
          }
          
          var Roomcommit = Room?.CommitChange();
          if(Roomcommit!=null)
          {
              isChange = true;
              other.Room = Roomcommit;
          }
          return isChange?other:null;
        }
        
        public void MergeFrom(Callback other, bool isFull = false) {
          if (other == global::Protocol.BattleOnInitReq.Types.Callback.DefaultInstance) return;
          if (other.HasOk) {
            Ok = other.Ok;
          }
          if (other.HasMsg) {
            Msg = other.Msg;
          }
          
          if (other.HasRoom)
          {
            MergeRoom(other.Room, isFull);
          }
        }
        
        public static Callback ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Callback ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Callback ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Callback ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Callback ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Callback ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static Callback ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static Callback ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static Callback ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Callback ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private Callback MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(Callback prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<Callback, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(Callback cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private Callback result;
          
          private Callback PrepareBuilder() {
            if (resultIsReadOnly) {
              Callback original = result;
              result = new Callback();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override Callback MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::Protocol.BattleOnInitReq.Types.Callback.Descriptor; }
          }
          
          public override Callback DefaultInstanceForType {
            get { return global::Protocol.BattleOnInitReq.Types.Callback.DefaultInstance; }
          }
          
          public override Callback BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is Callback) {
              return MergeFrom((Callback) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(Callback other) {
            if (other == global::Protocol.BattleOnInitReq.Types.Callback.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasOk) {
              Ok = other.Ok;
            }
            if (other.HasMsg) {
              Msg = other.Msg;
            }
            if (other.HasRoom) {
              MergeRoom(other.Room);
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_callbackFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _callbackFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasOk = input.ReadBool(ref result.ok_);
                  break;
                }
                case 18: {
                  result.hasMsg = input.ReadString(ref result.msg_);
                  break;
                }
                case 26: {
                  global::Protocol.Room.Builder subBuilder = global::Protocol.Room.CreateBuilder();
                  if (result.hasRoom) {
                    subBuilder.MergeFrom(Room);
                  }
                  input.ReadMessage(subBuilder, extensionRegistry);
                  Room = subBuilder.BuildPartial();
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasOk {
            get { return result.hasOk; }
          }
          public bool Ok {
            get { return result.Ok; }
            set { SetOk(value); }
          }
          public Builder SetOk(bool value) {
            PrepareBuilder();
            result.hasOk = true;
            result.ok_ = value;
            return this;
          }
          public Builder ClearOk() {
            PrepareBuilder();
            result.hasOk = false;
            result.ok_ = false;
            return this;
          }
          
          public bool HasMsg {
            get { return result.hasMsg; }
          }
          public string Msg {
            get { return result.Msg; }
            set { SetMsg(value); }
          }
          public Builder SetMsg(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasMsg = true;
            result.msg_ = value;
            return this;
          }
          public Builder ClearMsg() {
            PrepareBuilder();
            result.hasMsg = false;
            result.msg_ = "";
            return this;
          }
          
          public bool HasRoom {
           get { return result.hasRoom; }
          }
          public global::Protocol.Room Room {
            get { return result.Room; }
            set { SetRoom(value); }
          }
          public Builder SetRoom(global::Protocol.Room value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasRoom = true;
            result.room_ = value;
            return this;
          }
          public Builder SetRoom(global::Protocol.Room.Builder builderForValue) {
            pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
            PrepareBuilder();
            result.hasRoom = true;
            result.room_ = builderForValue.Build();
            return this;
          }
          public Builder MergeRoom(global::Protocol.Room value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            if (result.HasRoom &&
                result.room_ != global::Protocol.Room.DefaultInstance) {
                result.room_ = global::Protocol.Room.CreateBuilder(result.room_).MergeFrom(value).BuildPartial();
            } else {
              result.room_ = value;
              result.hasRoom = true;
            }
            return this;
          }
          public Builder ClearRoom() {
            PrepareBuilder();
            result.hasRoom = false;
            result.room_ = null;
            return this;
          }
        }
        static Callback() {
          object.ReferenceEquals(global::Protocol.ProtoServer.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int CallbackFieldNumber = 255;
    private bool hasCallback;
    private global::Protocol.BattleOnInitReq.Types.Callback callback_;
    public bool HasCallback {
      get { return hasCallback; }
    }
    public global::Protocol.BattleOnInitReq.Types.Callback Callback {
      get { return callback_; }
      set { hasCallback = true;
        callback_ = value;}
    }
    public void MergeCallback(global::Protocol.BattleOnInitReq.Types.Callback value, bool isFull = false) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      if (HasCallback &&
        callback_ != global::Protocol.BattleOnInitReq.Types.Callback.DefaultInstance) {
        callback_.MergeFrom(value, isFull);
      } else {
        callback_ = value;
      }
    }
    
    public override bool IsInitialized {
      get {
        if (HasCallback) {
          if (!Callback.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _battleOnInitReqFieldNames;
      if (hasCallback) {
        output.WriteMessage(255, field_names[0], Callback);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = 0;
      if (hasCallback) {
        size += pb::CodedOutputStream.ComputeMessageSize(255, Callback);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    
    public BattleOnInitReq CommitChange() {
      BattleOnInitReq other = new BattleOnInitReq();
      bool isChange = false;
      
      var Callbackcommit = Callback?.CommitChange();
      if(Callbackcommit!=null)
      {
          isChange = true;
          other.Callback = Callbackcommit;
      }
      return isChange?other:null;
    }
    
    public void MergeFrom(BattleOnInitReq other, bool isFull = false) {
      if (other == global::Protocol.BattleOnInitReq.DefaultInstance) return;
      
      if (other.HasCallback)
      {
        MergeCallback(other.Callback, isFull);
      }
    }
    
    public static BattleOnInitReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BattleOnInitReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BattleOnInitReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BattleOnInitReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BattleOnInitReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BattleOnInitReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BattleOnInitReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BattleOnInitReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BattleOnInitReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BattleOnInitReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BattleOnInitReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BattleOnInitReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BattleOnInitReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BattleOnInitReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BattleOnInitReq result;
      
      private BattleOnInitReq PrepareBuilder() {
        if (resultIsReadOnly) {
          BattleOnInitReq original = result;
          result = new BattleOnInitReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BattleOnInitReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Protocol.BattleOnInitReq.Descriptor; }
      }
      
      public override BattleOnInitReq DefaultInstanceForType {
        get { return global::Protocol.BattleOnInitReq.DefaultInstance; }
      }
      
      public override BattleOnInitReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BattleOnInitReq) {
          return MergeFrom((BattleOnInitReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BattleOnInitReq other) {
        if (other == global::Protocol.BattleOnInitReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCallback) {
          MergeCallback(other.Callback);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_battleOnInitReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _battleOnInitReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 2042: {
              global::Protocol.BattleOnInitReq.Types.Callback.Builder subBuilder = global::Protocol.BattleOnInitReq.Types.Callback.CreateBuilder();
              if (result.hasCallback) {
                subBuilder.MergeFrom(Callback);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Callback = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCallback {
       get { return result.hasCallback; }
      }
      public global::Protocol.BattleOnInitReq.Types.Callback Callback {
        get { return result.Callback; }
        set { SetCallback(value); }
      }
      public Builder SetCallback(global::Protocol.BattleOnInitReq.Types.Callback value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCallback = true;
        result.callback_ = value;
        return this;
      }
      public Builder SetCallback(global::Protocol.BattleOnInitReq.Types.Callback.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCallback = true;
        result.callback_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCallback(global::Protocol.BattleOnInitReq.Types.Callback value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.HasCallback &&
            result.callback_ != global::Protocol.BattleOnInitReq.Types.Callback.DefaultInstance) {
            result.callback_ = global::Protocol.BattleOnInitReq.Types.Callback.CreateBuilder(result.callback_).MergeFrom(value).BuildPartial();
        } else {
          result.callback_ = value;
          result.hasCallback = true;
        }
        return this;
      }
      public Builder ClearCallback() {
        PrepareBuilder();
        result.hasCallback = false;
        result.callback_ = null;
        return this;
      }
    }
    static BattleOnInitReq() {
      object.ReferenceEquals(global::Protocol.ProtoServer.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BattleOnStartReq : pb::GeneratedMessage<BattleOnStartReq, BattleOnStartReq.Builder> {
    public BattleOnStartReq() { }
    private static readonly BattleOnStartReq defaultInstance = new BattleOnStartReq().MakeReadOnly();
    private static readonly string[] _battleOnStartReqFieldNames = new string[] { "callback" };
    private static readonly uint[] _battleOnStartReqFieldTags = new uint[] { 2042 };
    public static BattleOnStartReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BattleOnStartReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BattleOnStartReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleOnStartReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BattleOnStartReq, BattleOnStartReq.Builder> InternalFieldAccessors {
      get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleOnStartReq__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Callback : pb::GeneratedMessage<Callback, Callback.Builder> {
        public Callback() { }
        private static readonly Callback defaultInstance = new Callback().MakeReadOnly();
        private static readonly string[] _callbackFieldNames = new string[] { "msg", "ok" };
        private static readonly uint[] _callbackFieldTags = new uint[] { 18, 8 };
        public static Callback DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override Callback DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override Callback ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleOnStartReq_Callback__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<Callback, Callback.Builder> InternalFieldAccessors {
          get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleOnStartReq_Callback__FieldAccessorTable; }
        }
        
        public const int OkFieldNumber = 1;
        private bool hasOk;
        private bool isOkChanged = true;
        private bool ok_;
        public bool HasOk {
          get { return hasOk; }
        }
        public bool Ok {
          get { return ok_; }
          set { hasOk = true;
            isOkChanged = true;
            ok_ = value;}
        }
        
        public const int MsgFieldNumber = 2;
        private bool hasMsg;
        private bool isMsgChanged = true;
        private string msg_ = "";
        public bool HasMsg {
          get { return hasMsg; }
        }
        public string Msg {
          get { return msg_; }
          set { hasMsg = true;
            isMsgChanged = true;
            msg_ = value;}
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _callbackFieldNames;
          if (hasOk) {
            output.WriteBool(1, field_names[1], Ok);
          }
          if (hasMsg) {
            output.WriteString(2, field_names[0], Msg);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = 0;
          if (hasOk) {
            size += pb::CodedOutputStream.ComputeBoolSize(1, Ok);
          }
          if (hasMsg) {
            size += pb::CodedOutputStream.ComputeStringSize(2, Msg);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        
        public Callback CommitChange() {
          Callback other = new Callback();
          bool isChange = false;
          if (isOkChanged) {
            isChange = true;
            other.Ok = Ok;
            isOkChanged = false;
          }
          if (isMsgChanged) {
            isChange = true;
            other.Msg = Msg;
            isMsgChanged = false;
          }
          return isChange?other:null;
        }
        
        public void MergeFrom(Callback other, bool isFull = false) {
          if (other == global::Protocol.BattleOnStartReq.Types.Callback.DefaultInstance) return;
          if (other.HasOk) {
            Ok = other.Ok;
          }
          if (other.HasMsg) {
            Msg = other.Msg;
          }
        }
        
        public static Callback ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Callback ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Callback ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Callback ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Callback ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Callback ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static Callback ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static Callback ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static Callback ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Callback ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private Callback MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(Callback prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<Callback, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(Callback cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private Callback result;
          
          private Callback PrepareBuilder() {
            if (resultIsReadOnly) {
              Callback original = result;
              result = new Callback();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override Callback MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::Protocol.BattleOnStartReq.Types.Callback.Descriptor; }
          }
          
          public override Callback DefaultInstanceForType {
            get { return global::Protocol.BattleOnStartReq.Types.Callback.DefaultInstance; }
          }
          
          public override Callback BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is Callback) {
              return MergeFrom((Callback) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(Callback other) {
            if (other == global::Protocol.BattleOnStartReq.Types.Callback.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasOk) {
              Ok = other.Ok;
            }
            if (other.HasMsg) {
              Msg = other.Msg;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_callbackFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _callbackFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasOk = input.ReadBool(ref result.ok_);
                  break;
                }
                case 18: {
                  result.hasMsg = input.ReadString(ref result.msg_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasOk {
            get { return result.hasOk; }
          }
          public bool Ok {
            get { return result.Ok; }
            set { SetOk(value); }
          }
          public Builder SetOk(bool value) {
            PrepareBuilder();
            result.hasOk = true;
            result.ok_ = value;
            return this;
          }
          public Builder ClearOk() {
            PrepareBuilder();
            result.hasOk = false;
            result.ok_ = false;
            return this;
          }
          
          public bool HasMsg {
            get { return result.hasMsg; }
          }
          public string Msg {
            get { return result.Msg; }
            set { SetMsg(value); }
          }
          public Builder SetMsg(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasMsg = true;
            result.msg_ = value;
            return this;
          }
          public Builder ClearMsg() {
            PrepareBuilder();
            result.hasMsg = false;
            result.msg_ = "";
            return this;
          }
        }
        static Callback() {
          object.ReferenceEquals(global::Protocol.ProtoServer.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int CallbackFieldNumber = 255;
    private bool hasCallback;
    private global::Protocol.BattleOnStartReq.Types.Callback callback_;
    public bool HasCallback {
      get { return hasCallback; }
    }
    public global::Protocol.BattleOnStartReq.Types.Callback Callback {
      get { return callback_; }
      set { hasCallback = true;
        callback_ = value;}
    }
    public void MergeCallback(global::Protocol.BattleOnStartReq.Types.Callback value, bool isFull = false) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      if (HasCallback &&
        callback_ != global::Protocol.BattleOnStartReq.Types.Callback.DefaultInstance) {
        callback_.MergeFrom(value, isFull);
      } else {
        callback_ = value;
      }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _battleOnStartReqFieldNames;
      if (hasCallback) {
        output.WriteMessage(255, field_names[0], Callback);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = 0;
      if (hasCallback) {
        size += pb::CodedOutputStream.ComputeMessageSize(255, Callback);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    
    public BattleOnStartReq CommitChange() {
      BattleOnStartReq other = new BattleOnStartReq();
      bool isChange = false;
      
      var Callbackcommit = Callback?.CommitChange();
      if(Callbackcommit!=null)
      {
          isChange = true;
          other.Callback = Callbackcommit;
      }
      return isChange?other:null;
    }
    
    public void MergeFrom(BattleOnStartReq other, bool isFull = false) {
      if (other == global::Protocol.BattleOnStartReq.DefaultInstance) return;
      
      if (other.HasCallback)
      {
        MergeCallback(other.Callback, isFull);
      }
    }
    
    public static BattleOnStartReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BattleOnStartReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BattleOnStartReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BattleOnStartReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BattleOnStartReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BattleOnStartReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BattleOnStartReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BattleOnStartReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BattleOnStartReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BattleOnStartReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BattleOnStartReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BattleOnStartReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BattleOnStartReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BattleOnStartReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BattleOnStartReq result;
      
      private BattleOnStartReq PrepareBuilder() {
        if (resultIsReadOnly) {
          BattleOnStartReq original = result;
          result = new BattleOnStartReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BattleOnStartReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Protocol.BattleOnStartReq.Descriptor; }
      }
      
      public override BattleOnStartReq DefaultInstanceForType {
        get { return global::Protocol.BattleOnStartReq.DefaultInstance; }
      }
      
      public override BattleOnStartReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BattleOnStartReq) {
          return MergeFrom((BattleOnStartReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BattleOnStartReq other) {
        if (other == global::Protocol.BattleOnStartReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCallback) {
          MergeCallback(other.Callback);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_battleOnStartReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _battleOnStartReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 2042: {
              global::Protocol.BattleOnStartReq.Types.Callback.Builder subBuilder = global::Protocol.BattleOnStartReq.Types.Callback.CreateBuilder();
              if (result.hasCallback) {
                subBuilder.MergeFrom(Callback);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Callback = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCallback {
       get { return result.hasCallback; }
      }
      public global::Protocol.BattleOnStartReq.Types.Callback Callback {
        get { return result.Callback; }
        set { SetCallback(value); }
      }
      public Builder SetCallback(global::Protocol.BattleOnStartReq.Types.Callback value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCallback = true;
        result.callback_ = value;
        return this;
      }
      public Builder SetCallback(global::Protocol.BattleOnStartReq.Types.Callback.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCallback = true;
        result.callback_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCallback(global::Protocol.BattleOnStartReq.Types.Callback value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.HasCallback &&
            result.callback_ != global::Protocol.BattleOnStartReq.Types.Callback.DefaultInstance) {
            result.callback_ = global::Protocol.BattleOnStartReq.Types.Callback.CreateBuilder(result.callback_).MergeFrom(value).BuildPartial();
        } else {
          result.callback_ = value;
          result.hasCallback = true;
        }
        return this;
      }
      public Builder ClearCallback() {
        PrepareBuilder();
        result.hasCallback = false;
        result.callback_ = null;
        return this;
      }
    }
    static BattleOnStartReq() {
      object.ReferenceEquals(global::Protocol.ProtoServer.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BattleOnSettlementReq : pb::GeneratedMessage<BattleOnSettlementReq, BattleOnSettlementReq.Builder> {
    public BattleOnSettlementReq() { }
    private static readonly BattleOnSettlementReq defaultInstance = new BattleOnSettlementReq().MakeReadOnly();
    private static readonly string[] _battleOnSettlementReqFieldNames = new string[] { "callback" };
    private static readonly uint[] _battleOnSettlementReqFieldTags = new uint[] { 2042 };
    public static BattleOnSettlementReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BattleOnSettlementReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BattleOnSettlementReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleOnSettlementReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BattleOnSettlementReq, BattleOnSettlementReq.Builder> InternalFieldAccessors {
      get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleOnSettlementReq__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Callback : pb::GeneratedMessage<Callback, Callback.Builder> {
        public Callback() { }
        private static readonly Callback defaultInstance = new Callback().MakeReadOnly();
        private static readonly string[] _callbackFieldNames = new string[] { "msg", "ok", "settlement" };
        private static readonly uint[] _callbackFieldTags = new uint[] { 18, 8, 26 };
        public static Callback DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override Callback DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override Callback ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleOnSettlementReq_Callback__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<Callback, Callback.Builder> InternalFieldAccessors {
          get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleOnSettlementReq_Callback__FieldAccessorTable; }
        }
        
        public const int OkFieldNumber = 1;
        private bool hasOk;
        private bool isOkChanged = true;
        private bool ok_;
        public bool HasOk {
          get { return hasOk; }
        }
        public bool Ok {
          get { return ok_; }
          set { hasOk = true;
            isOkChanged = true;
            ok_ = value;}
        }
        
        public const int MsgFieldNumber = 2;
        private bool hasMsg;
        private bool isMsgChanged = true;
        private string msg_ = "";
        public bool HasMsg {
          get { return hasMsg; }
        }
        public string Msg {
          get { return msg_; }
          set { hasMsg = true;
            isMsgChanged = true;
            msg_ = value;}
        }
        
        public const int SettlementFieldNumber = 3;
        private bool hasSettlement;
        private global::Protocol.SettlementResult settlement_;
        public bool HasSettlement {
          get { return hasSettlement; }
        }
        public global::Protocol.SettlementResult Settlement {
          get { return settlement_; }
          set { hasSettlement = true;
            settlement_ = value;}
        }
        public void MergeSettlement(global::Protocol.SettlementResult value, bool isFull = false) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          if (HasSettlement &&
            settlement_ != global::Protocol.SettlementResult.DefaultInstance) {
            settlement_.MergeFrom(value, isFull);
          } else {
            settlement_ = value;
          }
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _callbackFieldNames;
          if (hasOk) {
            output.WriteBool(1, field_names[1], Ok);
          }
          if (hasMsg) {
            output.WriteString(2, field_names[0], Msg);
          }
          if (hasSettlement) {
            output.WriteMessage(3, field_names[2], Settlement);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = 0;
          if (hasOk) {
            size += pb::CodedOutputStream.ComputeBoolSize(1, Ok);
          }
          if (hasMsg) {
            size += pb::CodedOutputStream.ComputeStringSize(2, Msg);
          }
          if (hasSettlement) {
            size += pb::CodedOutputStream.ComputeMessageSize(3, Settlement);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        
        public Callback CommitChange() {
          Callback other = new Callback();
          bool isChange = false;
          if (isOkChanged) {
            isChange = true;
            other.Ok = Ok;
            isOkChanged = false;
          }
          if (isMsgChanged) {
            isChange = true;
            other.Msg = Msg;
            isMsgChanged = false;
          }
          
          var Settlementcommit = Settlement?.CommitChange();
          if(Settlementcommit!=null)
          {
              isChange = true;
              other.Settlement = Settlementcommit;
          }
          return isChange?other:null;
        }
        
        public void MergeFrom(Callback other, bool isFull = false) {
          if (other == global::Protocol.BattleOnSettlementReq.Types.Callback.DefaultInstance) return;
          if (other.HasOk) {
            Ok = other.Ok;
          }
          if (other.HasMsg) {
            Msg = other.Msg;
          }
          
          if (other.HasSettlement)
          {
            MergeSettlement(other.Settlement, isFull);
          }
        }
        
        public static Callback ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Callback ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Callback ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Callback ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Callback ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Callback ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static Callback ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static Callback ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static Callback ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Callback ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private Callback MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(Callback prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<Callback, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(Callback cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private Callback result;
          
          private Callback PrepareBuilder() {
            if (resultIsReadOnly) {
              Callback original = result;
              result = new Callback();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override Callback MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::Protocol.BattleOnSettlementReq.Types.Callback.Descriptor; }
          }
          
          public override Callback DefaultInstanceForType {
            get { return global::Protocol.BattleOnSettlementReq.Types.Callback.DefaultInstance; }
          }
          
          public override Callback BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is Callback) {
              return MergeFrom((Callback) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(Callback other) {
            if (other == global::Protocol.BattleOnSettlementReq.Types.Callback.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasOk) {
              Ok = other.Ok;
            }
            if (other.HasMsg) {
              Msg = other.Msg;
            }
            if (other.HasSettlement) {
              MergeSettlement(other.Settlement);
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_callbackFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _callbackFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasOk = input.ReadBool(ref result.ok_);
                  break;
                }
                case 18: {
                  result.hasMsg = input.ReadString(ref result.msg_);
                  break;
                }
                case 26: {
                  global::Protocol.SettlementResult.Builder subBuilder = global::Protocol.SettlementResult.CreateBuilder();
                  if (result.hasSettlement) {
                    subBuilder.MergeFrom(Settlement);
                  }
                  input.ReadMessage(subBuilder, extensionRegistry);
                  Settlement = subBuilder.BuildPartial();
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasOk {
            get { return result.hasOk; }
          }
          public bool Ok {
            get { return result.Ok; }
            set { SetOk(value); }
          }
          public Builder SetOk(bool value) {
            PrepareBuilder();
            result.hasOk = true;
            result.ok_ = value;
            return this;
          }
          public Builder ClearOk() {
            PrepareBuilder();
            result.hasOk = false;
            result.ok_ = false;
            return this;
          }
          
          public bool HasMsg {
            get { return result.hasMsg; }
          }
          public string Msg {
            get { return result.Msg; }
            set { SetMsg(value); }
          }
          public Builder SetMsg(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasMsg = true;
            result.msg_ = value;
            return this;
          }
          public Builder ClearMsg() {
            PrepareBuilder();
            result.hasMsg = false;
            result.msg_ = "";
            return this;
          }
          
          public bool HasSettlement {
           get { return result.hasSettlement; }
          }
          public global::Protocol.SettlementResult Settlement {
            get { return result.Settlement; }
            set { SetSettlement(value); }
          }
          public Builder SetSettlement(global::Protocol.SettlementResult value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasSettlement = true;
            result.settlement_ = value;
            return this;
          }
          public Builder SetSettlement(global::Protocol.SettlementResult.Builder builderForValue) {
            pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
            PrepareBuilder();
            result.hasSettlement = true;
            result.settlement_ = builderForValue.Build();
            return this;
          }
          public Builder MergeSettlement(global::Protocol.SettlementResult value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            if (result.HasSettlement &&
                result.settlement_ != global::Protocol.SettlementResult.DefaultInstance) {
                result.settlement_ = global::Protocol.SettlementResult.CreateBuilder(result.settlement_).MergeFrom(value).BuildPartial();
            } else {
              result.settlement_ = value;
              result.hasSettlement = true;
            }
            return this;
          }
          public Builder ClearSettlement() {
            PrepareBuilder();
            result.hasSettlement = false;
            result.settlement_ = null;
            return this;
          }
        }
        static Callback() {
          object.ReferenceEquals(global::Protocol.ProtoServer.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int CallbackFieldNumber = 255;
    private bool hasCallback;
    private global::Protocol.BattleOnSettlementReq.Types.Callback callback_;
    public bool HasCallback {
      get { return hasCallback; }
    }
    public global::Protocol.BattleOnSettlementReq.Types.Callback Callback {
      get { return callback_; }
      set { hasCallback = true;
        callback_ = value;}
    }
    public void MergeCallback(global::Protocol.BattleOnSettlementReq.Types.Callback value, bool isFull = false) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      if (HasCallback &&
        callback_ != global::Protocol.BattleOnSettlementReq.Types.Callback.DefaultInstance) {
        callback_.MergeFrom(value, isFull);
      } else {
        callback_ = value;
      }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _battleOnSettlementReqFieldNames;
      if (hasCallback) {
        output.WriteMessage(255, field_names[0], Callback);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = 0;
      if (hasCallback) {
        size += pb::CodedOutputStream.ComputeMessageSize(255, Callback);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    
    public BattleOnSettlementReq CommitChange() {
      BattleOnSettlementReq other = new BattleOnSettlementReq();
      bool isChange = false;
      
      var Callbackcommit = Callback?.CommitChange();
      if(Callbackcommit!=null)
      {
          isChange = true;
          other.Callback = Callbackcommit;
      }
      return isChange?other:null;
    }
    
    public void MergeFrom(BattleOnSettlementReq other, bool isFull = false) {
      if (other == global::Protocol.BattleOnSettlementReq.DefaultInstance) return;
      
      if (other.HasCallback)
      {
        MergeCallback(other.Callback, isFull);
      }
    }
    
    public static BattleOnSettlementReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BattleOnSettlementReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BattleOnSettlementReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BattleOnSettlementReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BattleOnSettlementReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BattleOnSettlementReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BattleOnSettlementReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BattleOnSettlementReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BattleOnSettlementReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BattleOnSettlementReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BattleOnSettlementReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BattleOnSettlementReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BattleOnSettlementReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BattleOnSettlementReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BattleOnSettlementReq result;
      
      private BattleOnSettlementReq PrepareBuilder() {
        if (resultIsReadOnly) {
          BattleOnSettlementReq original = result;
          result = new BattleOnSettlementReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BattleOnSettlementReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Protocol.BattleOnSettlementReq.Descriptor; }
      }
      
      public override BattleOnSettlementReq DefaultInstanceForType {
        get { return global::Protocol.BattleOnSettlementReq.DefaultInstance; }
      }
      
      public override BattleOnSettlementReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BattleOnSettlementReq) {
          return MergeFrom((BattleOnSettlementReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BattleOnSettlementReq other) {
        if (other == global::Protocol.BattleOnSettlementReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCallback) {
          MergeCallback(other.Callback);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_battleOnSettlementReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _battleOnSettlementReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 2042: {
              global::Protocol.BattleOnSettlementReq.Types.Callback.Builder subBuilder = global::Protocol.BattleOnSettlementReq.Types.Callback.CreateBuilder();
              if (result.hasCallback) {
                subBuilder.MergeFrom(Callback);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Callback = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCallback {
       get { return result.hasCallback; }
      }
      public global::Protocol.BattleOnSettlementReq.Types.Callback Callback {
        get { return result.Callback; }
        set { SetCallback(value); }
      }
      public Builder SetCallback(global::Protocol.BattleOnSettlementReq.Types.Callback value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCallback = true;
        result.callback_ = value;
        return this;
      }
      public Builder SetCallback(global::Protocol.BattleOnSettlementReq.Types.Callback.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCallback = true;
        result.callback_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCallback(global::Protocol.BattleOnSettlementReq.Types.Callback value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.HasCallback &&
            result.callback_ != global::Protocol.BattleOnSettlementReq.Types.Callback.DefaultInstance) {
            result.callback_ = global::Protocol.BattleOnSettlementReq.Types.Callback.CreateBuilder(result.callback_).MergeFrom(value).BuildPartial();
        } else {
          result.callback_ = value;
          result.hasCallback = true;
        }
        return this;
      }
      public Builder ClearCallback() {
        PrepareBuilder();
        result.hasCallback = false;
        result.callback_ = null;
        return this;
      }
    }
    static BattleOnSettlementReq() {
      object.ReferenceEquals(global::Protocol.ProtoServer.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BattleOnEndReq : pb::GeneratedMessage<BattleOnEndReq, BattleOnEndReq.Builder> {
    public BattleOnEndReq() { }
    private static readonly BattleOnEndReq defaultInstance = new BattleOnEndReq().MakeReadOnly();
    private static readonly string[] _battleOnEndReqFieldNames = new string[] { "callback" };
    private static readonly uint[] _battleOnEndReqFieldTags = new uint[] { 2042 };
    public static BattleOnEndReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BattleOnEndReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BattleOnEndReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleOnEndReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BattleOnEndReq, BattleOnEndReq.Builder> InternalFieldAccessors {
      get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleOnEndReq__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Callback : pb::GeneratedMessage<Callback, Callback.Builder> {
        public Callback() { }
        private static readonly Callback defaultInstance = new Callback().MakeReadOnly();
        private static readonly string[] _callbackFieldNames = new string[] { "msg", "ok" };
        private static readonly uint[] _callbackFieldTags = new uint[] { 18, 8 };
        public static Callback DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override Callback DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override Callback ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleOnEndReq_Callback__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<Callback, Callback.Builder> InternalFieldAccessors {
          get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleOnEndReq_Callback__FieldAccessorTable; }
        }
        
        public const int OkFieldNumber = 1;
        private bool hasOk;
        private bool isOkChanged = true;
        private bool ok_;
        public bool HasOk {
          get { return hasOk; }
        }
        public bool Ok {
          get { return ok_; }
          set { hasOk = true;
            isOkChanged = true;
            ok_ = value;}
        }
        
        public const int MsgFieldNumber = 2;
        private bool hasMsg;
        private bool isMsgChanged = true;
        private string msg_ = "";
        public bool HasMsg {
          get { return hasMsg; }
        }
        public string Msg {
          get { return msg_; }
          set { hasMsg = true;
            isMsgChanged = true;
            msg_ = value;}
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _callbackFieldNames;
          if (hasOk) {
            output.WriteBool(1, field_names[1], Ok);
          }
          if (hasMsg) {
            output.WriteString(2, field_names[0], Msg);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = 0;
          if (hasOk) {
            size += pb::CodedOutputStream.ComputeBoolSize(1, Ok);
          }
          if (hasMsg) {
            size += pb::CodedOutputStream.ComputeStringSize(2, Msg);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        
        public Callback CommitChange() {
          Callback other = new Callback();
          bool isChange = false;
          if (isOkChanged) {
            isChange = true;
            other.Ok = Ok;
            isOkChanged = false;
          }
          if (isMsgChanged) {
            isChange = true;
            other.Msg = Msg;
            isMsgChanged = false;
          }
          return isChange?other:null;
        }
        
        public void MergeFrom(Callback other, bool isFull = false) {
          if (other == global::Protocol.BattleOnEndReq.Types.Callback.DefaultInstance) return;
          if (other.HasOk) {
            Ok = other.Ok;
          }
          if (other.HasMsg) {
            Msg = other.Msg;
          }
        }
        
        public static Callback ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Callback ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Callback ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Callback ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Callback ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Callback ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static Callback ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static Callback ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static Callback ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Callback ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private Callback MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(Callback prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<Callback, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(Callback cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private Callback result;
          
          private Callback PrepareBuilder() {
            if (resultIsReadOnly) {
              Callback original = result;
              result = new Callback();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override Callback MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::Protocol.BattleOnEndReq.Types.Callback.Descriptor; }
          }
          
          public override Callback DefaultInstanceForType {
            get { return global::Protocol.BattleOnEndReq.Types.Callback.DefaultInstance; }
          }
          
          public override Callback BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is Callback) {
              return MergeFrom((Callback) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(Callback other) {
            if (other == global::Protocol.BattleOnEndReq.Types.Callback.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasOk) {
              Ok = other.Ok;
            }
            if (other.HasMsg) {
              Msg = other.Msg;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_callbackFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _callbackFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasOk = input.ReadBool(ref result.ok_);
                  break;
                }
                case 18: {
                  result.hasMsg = input.ReadString(ref result.msg_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasOk {
            get { return result.hasOk; }
          }
          public bool Ok {
            get { return result.Ok; }
            set { SetOk(value); }
          }
          public Builder SetOk(bool value) {
            PrepareBuilder();
            result.hasOk = true;
            result.ok_ = value;
            return this;
          }
          public Builder ClearOk() {
            PrepareBuilder();
            result.hasOk = false;
            result.ok_ = false;
            return this;
          }
          
          public bool HasMsg {
            get { return result.hasMsg; }
          }
          public string Msg {
            get { return result.Msg; }
            set { SetMsg(value); }
          }
          public Builder SetMsg(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasMsg = true;
            result.msg_ = value;
            return this;
          }
          public Builder ClearMsg() {
            PrepareBuilder();
            result.hasMsg = false;
            result.msg_ = "";
            return this;
          }
        }
        static Callback() {
          object.ReferenceEquals(global::Protocol.ProtoServer.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int CallbackFieldNumber = 255;
    private bool hasCallback;
    private global::Protocol.BattleOnEndReq.Types.Callback callback_;
    public bool HasCallback {
      get { return hasCallback; }
    }
    public global::Protocol.BattleOnEndReq.Types.Callback Callback {
      get { return callback_; }
      set { hasCallback = true;
        callback_ = value;}
    }
    public void MergeCallback(global::Protocol.BattleOnEndReq.Types.Callback value, bool isFull = false) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      if (HasCallback &&
        callback_ != global::Protocol.BattleOnEndReq.Types.Callback.DefaultInstance) {
        callback_.MergeFrom(value, isFull);
      } else {
        callback_ = value;
      }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _battleOnEndReqFieldNames;
      if (hasCallback) {
        output.WriteMessage(255, field_names[0], Callback);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = 0;
      if (hasCallback) {
        size += pb::CodedOutputStream.ComputeMessageSize(255, Callback);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    
    public BattleOnEndReq CommitChange() {
      BattleOnEndReq other = new BattleOnEndReq();
      bool isChange = false;
      
      var Callbackcommit = Callback?.CommitChange();
      if(Callbackcommit!=null)
      {
          isChange = true;
          other.Callback = Callbackcommit;
      }
      return isChange?other:null;
    }
    
    public void MergeFrom(BattleOnEndReq other, bool isFull = false) {
      if (other == global::Protocol.BattleOnEndReq.DefaultInstance) return;
      
      if (other.HasCallback)
      {
        MergeCallback(other.Callback, isFull);
      }
    }
    
    public static BattleOnEndReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BattleOnEndReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BattleOnEndReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BattleOnEndReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BattleOnEndReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BattleOnEndReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BattleOnEndReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BattleOnEndReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BattleOnEndReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BattleOnEndReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BattleOnEndReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BattleOnEndReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BattleOnEndReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BattleOnEndReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BattleOnEndReq result;
      
      private BattleOnEndReq PrepareBuilder() {
        if (resultIsReadOnly) {
          BattleOnEndReq original = result;
          result = new BattleOnEndReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BattleOnEndReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Protocol.BattleOnEndReq.Descriptor; }
      }
      
      public override BattleOnEndReq DefaultInstanceForType {
        get { return global::Protocol.BattleOnEndReq.DefaultInstance; }
      }
      
      public override BattleOnEndReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BattleOnEndReq) {
          return MergeFrom((BattleOnEndReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BattleOnEndReq other) {
        if (other == global::Protocol.BattleOnEndReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCallback) {
          MergeCallback(other.Callback);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_battleOnEndReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _battleOnEndReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 2042: {
              global::Protocol.BattleOnEndReq.Types.Callback.Builder subBuilder = global::Protocol.BattleOnEndReq.Types.Callback.CreateBuilder();
              if (result.hasCallback) {
                subBuilder.MergeFrom(Callback);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Callback = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCallback {
       get { return result.hasCallback; }
      }
      public global::Protocol.BattleOnEndReq.Types.Callback Callback {
        get { return result.Callback; }
        set { SetCallback(value); }
      }
      public Builder SetCallback(global::Protocol.BattleOnEndReq.Types.Callback value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCallback = true;
        result.callback_ = value;
        return this;
      }
      public Builder SetCallback(global::Protocol.BattleOnEndReq.Types.Callback.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCallback = true;
        result.callback_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCallback(global::Protocol.BattleOnEndReq.Types.Callback value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.HasCallback &&
            result.callback_ != global::Protocol.BattleOnEndReq.Types.Callback.DefaultInstance) {
            result.callback_ = global::Protocol.BattleOnEndReq.Types.Callback.CreateBuilder(result.callback_).MergeFrom(value).BuildPartial();
        } else {
          result.callback_ = value;
          result.hasCallback = true;
        }
        return this;
      }
      public Builder ClearCallback() {
        PrepareBuilder();
        result.hasCallback = false;
        result.callback_ = null;
        return this;
      }
    }
    static BattleOnEndReq() {
      object.ReferenceEquals(global::Protocol.ProtoServer.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BattleOnExitReq : pb::GeneratedMessage<BattleOnExitReq, BattleOnExitReq.Builder> {
    public BattleOnExitReq() { }
    private static readonly BattleOnExitReq defaultInstance = new BattleOnExitReq().MakeReadOnly();
    private static readonly string[] _battleOnExitReqFieldNames = new string[] { "callback" };
    private static readonly uint[] _battleOnExitReqFieldTags = new uint[] { 2042 };
    public static BattleOnExitReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BattleOnExitReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BattleOnExitReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleOnExitReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BattleOnExitReq, BattleOnExitReq.Builder> InternalFieldAccessors {
      get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleOnExitReq__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Callback : pb::GeneratedMessage<Callback, Callback.Builder> {
        public Callback() { }
        private static readonly Callback defaultInstance = new Callback().MakeReadOnly();
        private static readonly string[] _callbackFieldNames = new string[] { "msg", "ok" };
        private static readonly uint[] _callbackFieldTags = new uint[] { 18, 8 };
        public static Callback DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override Callback DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override Callback ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleOnExitReq_Callback__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<Callback, Callback.Builder> InternalFieldAccessors {
          get { return global::Protocol.ProtoServer.internal__static_Protocol_BattleOnExitReq_Callback__FieldAccessorTable; }
        }
        
        public const int OkFieldNumber = 1;
        private bool hasOk;
        private bool isOkChanged = true;
        private bool ok_;
        public bool HasOk {
          get { return hasOk; }
        }
        public bool Ok {
          get { return ok_; }
          set { hasOk = true;
            isOkChanged = true;
            ok_ = value;}
        }
        
        public const int MsgFieldNumber = 2;
        private bool hasMsg;
        private bool isMsgChanged = true;
        private string msg_ = "";
        public bool HasMsg {
          get { return hasMsg; }
        }
        public string Msg {
          get { return msg_; }
          set { hasMsg = true;
            isMsgChanged = true;
            msg_ = value;}
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _callbackFieldNames;
          if (hasOk) {
            output.WriteBool(1, field_names[1], Ok);
          }
          if (hasMsg) {
            output.WriteString(2, field_names[0], Msg);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = 0;
          if (hasOk) {
            size += pb::CodedOutputStream.ComputeBoolSize(1, Ok);
          }
          if (hasMsg) {
            size += pb::CodedOutputStream.ComputeStringSize(2, Msg);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        
        public Callback CommitChange() {
          Callback other = new Callback();
          bool isChange = false;
          if (isOkChanged) {
            isChange = true;
            other.Ok = Ok;
            isOkChanged = false;
          }
          if (isMsgChanged) {
            isChange = true;
            other.Msg = Msg;
            isMsgChanged = false;
          }
          return isChange?other:null;
        }
        
        public void MergeFrom(Callback other, bool isFull = false) {
          if (other == global::Protocol.BattleOnExitReq.Types.Callback.DefaultInstance) return;
          if (other.HasOk) {
            Ok = other.Ok;
          }
          if (other.HasMsg) {
            Msg = other.Msg;
          }
        }
        
        public static Callback ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Callback ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Callback ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Callback ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Callback ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Callback ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static Callback ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static Callback ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static Callback ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Callback ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private Callback MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(Callback prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<Callback, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(Callback cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private Callback result;
          
          private Callback PrepareBuilder() {
            if (resultIsReadOnly) {
              Callback original = result;
              result = new Callback();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override Callback MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::Protocol.BattleOnExitReq.Types.Callback.Descriptor; }
          }
          
          public override Callback DefaultInstanceForType {
            get { return global::Protocol.BattleOnExitReq.Types.Callback.DefaultInstance; }
          }
          
          public override Callback BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is Callback) {
              return MergeFrom((Callback) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(Callback other) {
            if (other == global::Protocol.BattleOnExitReq.Types.Callback.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasOk) {
              Ok = other.Ok;
            }
            if (other.HasMsg) {
              Msg = other.Msg;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_callbackFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _callbackFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasOk = input.ReadBool(ref result.ok_);
                  break;
                }
                case 18: {
                  result.hasMsg = input.ReadString(ref result.msg_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasOk {
            get { return result.hasOk; }
          }
          public bool Ok {
            get { return result.Ok; }
            set { SetOk(value); }
          }
          public Builder SetOk(bool value) {
            PrepareBuilder();
            result.hasOk = true;
            result.ok_ = value;
            return this;
          }
          public Builder ClearOk() {
            PrepareBuilder();
            result.hasOk = false;
            result.ok_ = false;
            return this;
          }
          
          public bool HasMsg {
            get { return result.hasMsg; }
          }
          public string Msg {
            get { return result.Msg; }
            set { SetMsg(value); }
          }
          public Builder SetMsg(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasMsg = true;
            result.msg_ = value;
            return this;
          }
          public Builder ClearMsg() {
            PrepareBuilder();
            result.hasMsg = false;
            result.msg_ = "";
            return this;
          }
        }
        static Callback() {
          object.ReferenceEquals(global::Protocol.ProtoServer.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int CallbackFieldNumber = 255;
    private bool hasCallback;
    private global::Protocol.BattleOnExitReq.Types.Callback callback_;
    public bool HasCallback {
      get { return hasCallback; }
    }
    public global::Protocol.BattleOnExitReq.Types.Callback Callback {
      get { return callback_; }
      set { hasCallback = true;
        callback_ = value;}
    }
    public void MergeCallback(global::Protocol.BattleOnExitReq.Types.Callback value, bool isFull = false) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      if (HasCallback &&
        callback_ != global::Protocol.BattleOnExitReq.Types.Callback.DefaultInstance) {
        callback_.MergeFrom(value, isFull);
      } else {
        callback_ = value;
      }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _battleOnExitReqFieldNames;
      if (hasCallback) {
        output.WriteMessage(255, field_names[0], Callback);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = 0;
      if (hasCallback) {
        size += pb::CodedOutputStream.ComputeMessageSize(255, Callback);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    
    public BattleOnExitReq CommitChange() {
      BattleOnExitReq other = new BattleOnExitReq();
      bool isChange = false;
      
      var Callbackcommit = Callback?.CommitChange();
      if(Callbackcommit!=null)
      {
          isChange = true;
          other.Callback = Callbackcommit;
      }
      return isChange?other:null;
    }
    
    public void MergeFrom(BattleOnExitReq other, bool isFull = false) {
      if (other == global::Protocol.BattleOnExitReq.DefaultInstance) return;
      
      if (other.HasCallback)
      {
        MergeCallback(other.Callback, isFull);
      }
    }
    
    public static BattleOnExitReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BattleOnExitReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BattleOnExitReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BattleOnExitReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BattleOnExitReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BattleOnExitReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BattleOnExitReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BattleOnExitReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BattleOnExitReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BattleOnExitReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BattleOnExitReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BattleOnExitReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BattleOnExitReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BattleOnExitReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BattleOnExitReq result;
      
      private BattleOnExitReq PrepareBuilder() {
        if (resultIsReadOnly) {
          BattleOnExitReq original = result;
          result = new BattleOnExitReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BattleOnExitReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Protocol.BattleOnExitReq.Descriptor; }
      }
      
      public override BattleOnExitReq DefaultInstanceForType {
        get { return global::Protocol.BattleOnExitReq.DefaultInstance; }
      }
      
      public override BattleOnExitReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BattleOnExitReq) {
          return MergeFrom((BattleOnExitReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BattleOnExitReq other) {
        if (other == global::Protocol.BattleOnExitReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCallback) {
          MergeCallback(other.Callback);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_battleOnExitReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _battleOnExitReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 2042: {
              global::Protocol.BattleOnExitReq.Types.Callback.Builder subBuilder = global::Protocol.BattleOnExitReq.Types.Callback.CreateBuilder();
              if (result.hasCallback) {
                subBuilder.MergeFrom(Callback);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Callback = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCallback {
       get { return result.hasCallback; }
      }
      public global::Protocol.BattleOnExitReq.Types.Callback Callback {
        get { return result.Callback; }
        set { SetCallback(value); }
      }
      public Builder SetCallback(global::Protocol.BattleOnExitReq.Types.Callback value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCallback = true;
        result.callback_ = value;
        return this;
      }
      public Builder SetCallback(global::Protocol.BattleOnExitReq.Types.Callback.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCallback = true;
        result.callback_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCallback(global::Protocol.BattleOnExitReq.Types.Callback value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.HasCallback &&
            result.callback_ != global::Protocol.BattleOnExitReq.Types.Callback.DefaultInstance) {
            result.callback_ = global::Protocol.BattleOnExitReq.Types.Callback.CreateBuilder(result.callback_).MergeFrom(value).BuildPartial();
        } else {
          result.callback_ = value;
          result.hasCallback = true;
        }
        return this;
      }
      public Builder ClearCallback() {
        PrepareBuilder();
        result.hasCallback = false;
        result.callback_ = null;
        return this;
      }
    }
    static BattleOnExitReq() {
      object.ReferenceEquals(global::Protocol.ProtoServer.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ShutdownServerNtf : pb::GeneratedMessage<ShutdownServerNtf, ShutdownServerNtf.Builder> {
    public ShutdownServerNtf() { }
    private static readonly ShutdownServerNtf defaultInstance = new ShutdownServerNtf().MakeReadOnly();
    private static readonly string[] _shutdownServerNtfFieldNames = new string[] {  };
    private static readonly uint[] _shutdownServerNtfFieldTags = new uint[] {  };
    public static ShutdownServerNtf DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ShutdownServerNtf DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ShutdownServerNtf ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtoServer.internal__static_Protocol_ShutdownServerNtf__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ShutdownServerNtf, ShutdownServerNtf.Builder> InternalFieldAccessors {
      get { return global::Protocol.ProtoServer.internal__static_Protocol_ShutdownServerNtf__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _shutdownServerNtfFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    
    public ShutdownServerNtf CommitChange() {
      ShutdownServerNtf other = new ShutdownServerNtf();
      bool isChange = false;
      return isChange?other:null;
    }
    
    public void MergeFrom(ShutdownServerNtf other, bool isFull = false) {
      if (other == global::Protocol.ShutdownServerNtf.DefaultInstance) return;
    }
    
    public static ShutdownServerNtf ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ShutdownServerNtf ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ShutdownServerNtf ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ShutdownServerNtf ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ShutdownServerNtf ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ShutdownServerNtf ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ShutdownServerNtf ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ShutdownServerNtf ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ShutdownServerNtf ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ShutdownServerNtf ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ShutdownServerNtf MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ShutdownServerNtf prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ShutdownServerNtf, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ShutdownServerNtf cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ShutdownServerNtf result;
      
      private ShutdownServerNtf PrepareBuilder() {
        if (resultIsReadOnly) {
          ShutdownServerNtf original = result;
          result = new ShutdownServerNtf();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ShutdownServerNtf MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Protocol.ShutdownServerNtf.Descriptor; }
      }
      
      public override ShutdownServerNtf DefaultInstanceForType {
        get { return global::Protocol.ShutdownServerNtf.DefaultInstance; }
      }
      
      public override ShutdownServerNtf BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ShutdownServerNtf) {
          return MergeFrom((ShutdownServerNtf) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ShutdownServerNtf other) {
        if (other == global::Protocol.ShutdownServerNtf.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_shutdownServerNtfFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _shutdownServerNtfFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static ShutdownServerNtf() {
      object.ReferenceEquals(global::Protocol.ProtoServer.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
