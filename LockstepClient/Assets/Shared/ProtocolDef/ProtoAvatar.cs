// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Protocol {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class ProtoAvatar {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_Protocol_SyncUserNtf__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protocol.SyncUserNtf, global::Protocol.SyncUserNtf.Builder> internal__static_Protocol_SyncUserNtf__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Protocol_JoinRoomNtf__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protocol.JoinRoomNtf, global::Protocol.JoinRoomNtf.Builder> internal__static_Protocol_JoinRoomNtf__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Protocol_BattleInitNtf__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleInitNtf, global::Protocol.BattleInitNtf.Builder> internal__static_Protocol_BattleInitNtf__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ProtoAvatar() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJwcm90b19hdmF0YXIucHJvdG8SCFByb3RvY29sGhVwcm90b19kYXRhbW9k", 
            "ZWwucHJvdG8iMQoLU3luY1VzZXJOdGYSIgoEdXNlchgBIAEoCzIOLlByb3Rv", 
            "Y29sLlVzZXJSBHVzZXIiUwoLSm9pblJvb21OdGYSDgoCb2sYASABKAhSAm9r", 
            "EhAKA21zZxgCIAEoCVIDbXNnEiIKBHJvb20YAyABKAsyDi5Qcm90b2NvbC5S", 
            "b29tUgRyb29tIjcKDUJhdHRsZUluaXROdGYSJgoPYmF0dGxlX2luaXRfY2Zn", 
          "GAEgASgJUg1iYXR0bGVJbml0Q2Zn"));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Protocol_SyncUserNtf__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Protocol_SyncUserNtf__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protocol.SyncUserNtf, global::Protocol.SyncUserNtf.Builder>(internal__static_Protocol_SyncUserNtf__Descriptor,
                new string[] { "User", });
        internal__static_Protocol_JoinRoomNtf__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Protocol_JoinRoomNtf__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protocol.JoinRoomNtf, global::Protocol.JoinRoomNtf.Builder>(internal__static_Protocol_JoinRoomNtf__Descriptor,
                new string[] { "Ok", "Msg", "Room", });
        internal__static_Protocol_BattleInitNtf__Descriptor = Descriptor.MessageTypes[2];
        internal__static_Protocol_BattleInitNtf__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protocol.BattleInitNtf, global::Protocol.BattleInitNtf.Builder>(internal__static_Protocol_BattleInitNtf__Descriptor,
                new string[] { "BattleInitCfg", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::Protocol.ProtoDatamodel.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Protocol.ProtoDatamodel.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SyncUserNtf : pb::GeneratedMessage<SyncUserNtf, SyncUserNtf.Builder> {
    public SyncUserNtf() { }
    private static readonly SyncUserNtf defaultInstance = new SyncUserNtf().MakeReadOnly();
    private static readonly string[] _syncUserNtfFieldNames = new string[] { "user" };
    private static readonly uint[] _syncUserNtfFieldTags = new uint[] { 10 };
    public static SyncUserNtf DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SyncUserNtf DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SyncUserNtf ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtoAvatar.internal__static_Protocol_SyncUserNtf__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SyncUserNtf, SyncUserNtf.Builder> InternalFieldAccessors {
      get { return global::Protocol.ProtoAvatar.internal__static_Protocol_SyncUserNtf__FieldAccessorTable; }
    }
    
    public const int UserFieldNumber = 1;
    private bool hasUser;
    private global::Protocol.User user_;
    public bool HasUser {
      get { return hasUser; }
    }
    public global::Protocol.User User {
      get { return user_; }
      set { hasUser = true;
        user_ = value;}
    }
    public void MergeUser(global::Protocol.User value, bool isFull = false) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      if (HasUser &&
        user_ != global::Protocol.User.DefaultInstance) {
        user_.MergeFrom(value, isFull);
      } else {
        user_ = value;
      }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _syncUserNtfFieldNames;
      if (hasUser) {
        output.WriteMessage(1, field_names[0], User);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = 0;
      if (hasUser) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, User);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    
    public SyncUserNtf CommitChange() {
      SyncUserNtf other = new SyncUserNtf();
      bool isChange = false;
      
      var Usercommit = User?.CommitChange();
      if(Usercommit!=null)
      {
          isChange = true;
          other.User = Usercommit;
      }
      return isChange?other:null;
    }
    
    public void MergeFrom(SyncUserNtf other, bool isFull = false) {
      if (other == global::Protocol.SyncUserNtf.DefaultInstance) return;
      
      if (other.HasUser)
      {
        MergeUser(other.User, isFull);
      }
    }
    
    public static SyncUserNtf ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SyncUserNtf ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SyncUserNtf ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SyncUserNtf ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SyncUserNtf ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SyncUserNtf ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SyncUserNtf ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SyncUserNtf ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SyncUserNtf ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SyncUserNtf ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SyncUserNtf MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SyncUserNtf prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SyncUserNtf, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SyncUserNtf cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SyncUserNtf result;
      
      private SyncUserNtf PrepareBuilder() {
        if (resultIsReadOnly) {
          SyncUserNtf original = result;
          result = new SyncUserNtf();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SyncUserNtf MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Protocol.SyncUserNtf.Descriptor; }
      }
      
      public override SyncUserNtf DefaultInstanceForType {
        get { return global::Protocol.SyncUserNtf.DefaultInstance; }
      }
      
      public override SyncUserNtf BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SyncUserNtf) {
          return MergeFrom((SyncUserNtf) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SyncUserNtf other) {
        if (other == global::Protocol.SyncUserNtf.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUser) {
          MergeUser(other.User);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_syncUserNtfFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _syncUserNtfFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Protocol.User.Builder subBuilder = global::Protocol.User.CreateBuilder();
              if (result.hasUser) {
                subBuilder.MergeFrom(User);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              User = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUser {
       get { return result.hasUser; }
      }
      public global::Protocol.User User {
        get { return result.User; }
        set { SetUser(value); }
      }
      public Builder SetUser(global::Protocol.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = value;
        return this;
      }
      public Builder SetUser(global::Protocol.User.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUser(global::Protocol.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.HasUser &&
            result.user_ != global::Protocol.User.DefaultInstance) {
            result.user_ = global::Protocol.User.CreateBuilder(result.user_).MergeFrom(value).BuildPartial();
        } else {
          result.user_ = value;
          result.hasUser = true;
        }
        return this;
      }
      public Builder ClearUser() {
        PrepareBuilder();
        result.hasUser = false;
        result.user_ = null;
        return this;
      }
    }
    static SyncUserNtf() {
      object.ReferenceEquals(global::Protocol.ProtoAvatar.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class JoinRoomNtf : pb::GeneratedMessage<JoinRoomNtf, JoinRoomNtf.Builder> {
    public JoinRoomNtf() { }
    private static readonly JoinRoomNtf defaultInstance = new JoinRoomNtf().MakeReadOnly();
    private static readonly string[] _joinRoomNtfFieldNames = new string[] { "msg", "ok", "room" };
    private static readonly uint[] _joinRoomNtfFieldTags = new uint[] { 18, 8, 26 };
    public static JoinRoomNtf DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinRoomNtf DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinRoomNtf ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtoAvatar.internal__static_Protocol_JoinRoomNtf__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinRoomNtf, JoinRoomNtf.Builder> InternalFieldAccessors {
      get { return global::Protocol.ProtoAvatar.internal__static_Protocol_JoinRoomNtf__FieldAccessorTable; }
    }
    
    public const int OkFieldNumber = 1;
    private bool hasOk;
    private bool isOkChanged = true;
    private bool ok_;
    public bool HasOk {
      get { return hasOk; }
    }
    public bool Ok {
      get { return ok_; }
      set { hasOk = true;
        isOkChanged = true;
        ok_ = value;}
    }
    
    public const int MsgFieldNumber = 2;
    private bool hasMsg;
    private bool isMsgChanged = true;
    private string msg_ = "";
    public bool HasMsg {
      get { return hasMsg; }
    }
    public string Msg {
      get { return msg_; }
      set { hasMsg = true;
        isMsgChanged = true;
        msg_ = value;}
    }
    
    public const int RoomFieldNumber = 3;
    private bool hasRoom;
    private global::Protocol.Room room_;
    public bool HasRoom {
      get { return hasRoom; }
    }
    public global::Protocol.Room Room {
      get { return room_; }
      set { hasRoom = true;
        room_ = value;}
    }
    public void MergeRoom(global::Protocol.Room value, bool isFull = false) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      if (HasRoom &&
        room_ != global::Protocol.Room.DefaultInstance) {
        room_.MergeFrom(value, isFull);
      } else {
        room_ = value;
      }
    }
    
    public override bool IsInitialized {
      get {
        if (HasRoom) {
          if (!Room.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _joinRoomNtfFieldNames;
      if (hasOk) {
        output.WriteBool(1, field_names[1], Ok);
      }
      if (hasMsg) {
        output.WriteString(2, field_names[0], Msg);
      }
      if (hasRoom) {
        output.WriteMessage(3, field_names[2], Room);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = 0;
      if (hasOk) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, Ok);
      }
      if (hasMsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Msg);
      }
      if (hasRoom) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Room);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    
    public JoinRoomNtf CommitChange() {
      JoinRoomNtf other = new JoinRoomNtf();
      bool isChange = false;
      if (isOkChanged) {
        isChange = true;
        other.Ok = Ok;
        isOkChanged = false;
      }
      if (isMsgChanged) {
        isChange = true;
        other.Msg = Msg;
        isMsgChanged = false;
      }
      
      var Roomcommit = Room?.CommitChange();
      if(Roomcommit!=null)
      {
          isChange = true;
          other.Room = Roomcommit;
      }
      return isChange?other:null;
    }
    
    public void MergeFrom(JoinRoomNtf other, bool isFull = false) {
      if (other == global::Protocol.JoinRoomNtf.DefaultInstance) return;
      if (other.HasOk) {
        Ok = other.Ok;
      }
      if (other.HasMsg) {
        Msg = other.Msg;
      }
      
      if (other.HasRoom)
      {
        MergeRoom(other.Room, isFull);
      }
    }
    
    public static JoinRoomNtf ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinRoomNtf ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinRoomNtf ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinRoomNtf ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinRoomNtf ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinRoomNtf ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinRoomNtf ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinRoomNtf ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinRoomNtf ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinRoomNtf ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinRoomNtf MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinRoomNtf prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinRoomNtf, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinRoomNtf cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinRoomNtf result;
      
      private JoinRoomNtf PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinRoomNtf original = result;
          result = new JoinRoomNtf();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinRoomNtf MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Protocol.JoinRoomNtf.Descriptor; }
      }
      
      public override JoinRoomNtf DefaultInstanceForType {
        get { return global::Protocol.JoinRoomNtf.DefaultInstance; }
      }
      
      public override JoinRoomNtf BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinRoomNtf) {
          return MergeFrom((JoinRoomNtf) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinRoomNtf other) {
        if (other == global::Protocol.JoinRoomNtf.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOk) {
          Ok = other.Ok;
        }
        if (other.HasMsg) {
          Msg = other.Msg;
        }
        if (other.HasRoom) {
          MergeRoom(other.Room);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinRoomNtfFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinRoomNtfFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasOk = input.ReadBool(ref result.ok_);
              break;
            }
            case 18: {
              result.hasMsg = input.ReadString(ref result.msg_);
              break;
            }
            case 26: {
              global::Protocol.Room.Builder subBuilder = global::Protocol.Room.CreateBuilder();
              if (result.hasRoom) {
                subBuilder.MergeFrom(Room);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Room = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOk {
        get { return result.hasOk; }
      }
      public bool Ok {
        get { return result.Ok; }
        set { SetOk(value); }
      }
      public Builder SetOk(bool value) {
        PrepareBuilder();
        result.hasOk = true;
        result.ok_ = value;
        return this;
      }
      public Builder ClearOk() {
        PrepareBuilder();
        result.hasOk = false;
        result.ok_ = false;
        return this;
      }
      
      public bool HasMsg {
        get { return result.hasMsg; }
      }
      public string Msg {
        get { return result.Msg; }
        set { SetMsg(value); }
      }
      public Builder SetMsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMsg = true;
        result.msg_ = value;
        return this;
      }
      public Builder ClearMsg() {
        PrepareBuilder();
        result.hasMsg = false;
        result.msg_ = "";
        return this;
      }
      
      public bool HasRoom {
       get { return result.hasRoom; }
      }
      public global::Protocol.Room Room {
        get { return result.Room; }
        set { SetRoom(value); }
      }
      public Builder SetRoom(global::Protocol.Room value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRoom = true;
        result.room_ = value;
        return this;
      }
      public Builder SetRoom(global::Protocol.Room.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRoom = true;
        result.room_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRoom(global::Protocol.Room value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.HasRoom &&
            result.room_ != global::Protocol.Room.DefaultInstance) {
            result.room_ = global::Protocol.Room.CreateBuilder(result.room_).MergeFrom(value).BuildPartial();
        } else {
          result.room_ = value;
          result.hasRoom = true;
        }
        return this;
      }
      public Builder ClearRoom() {
        PrepareBuilder();
        result.hasRoom = false;
        result.room_ = null;
        return this;
      }
    }
    static JoinRoomNtf() {
      object.ReferenceEquals(global::Protocol.ProtoAvatar.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BattleInitNtf : pb::GeneratedMessage<BattleInitNtf, BattleInitNtf.Builder> {
    public BattleInitNtf() { }
    private static readonly BattleInitNtf defaultInstance = new BattleInitNtf().MakeReadOnly();
    private static readonly string[] _battleInitNtfFieldNames = new string[] { "battle_init_cfg" };
    private static readonly uint[] _battleInitNtfFieldTags = new uint[] { 10 };
    public static BattleInitNtf DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BattleInitNtf DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BattleInitNtf ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtoAvatar.internal__static_Protocol_BattleInitNtf__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BattleInitNtf, BattleInitNtf.Builder> InternalFieldAccessors {
      get { return global::Protocol.ProtoAvatar.internal__static_Protocol_BattleInitNtf__FieldAccessorTable; }
    }
    
    public const int BattleInitCfgFieldNumber = 1;
    private bool hasBattleInitCfg;
    private bool isBattleInitCfgChanged = true;
    private string battleInitCfg_ = "";
    public bool HasBattleInitCfg {
      get { return hasBattleInitCfg; }
    }
    public string BattleInitCfg {
      get { return battleInitCfg_; }
      set { hasBattleInitCfg = true;
        isBattleInitCfgChanged = true;
        battleInitCfg_ = value;}
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _battleInitNtfFieldNames;
      if (hasBattleInitCfg) {
        output.WriteString(1, field_names[0], BattleInitCfg);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = 0;
      if (hasBattleInitCfg) {
        size += pb::CodedOutputStream.ComputeStringSize(1, BattleInitCfg);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    
    public BattleInitNtf CommitChange() {
      BattleInitNtf other = new BattleInitNtf();
      bool isChange = false;
      if (isBattleInitCfgChanged) {
        isChange = true;
        other.BattleInitCfg = BattleInitCfg;
        isBattleInitCfgChanged = false;
      }
      return isChange?other:null;
    }
    
    public void MergeFrom(BattleInitNtf other, bool isFull = false) {
      if (other == global::Protocol.BattleInitNtf.DefaultInstance) return;
      if (other.HasBattleInitCfg) {
        BattleInitCfg = other.BattleInitCfg;
      }
    }
    
    public static BattleInitNtf ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BattleInitNtf ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BattleInitNtf ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BattleInitNtf ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BattleInitNtf ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BattleInitNtf ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BattleInitNtf ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BattleInitNtf ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BattleInitNtf ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BattleInitNtf ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BattleInitNtf MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BattleInitNtf prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BattleInitNtf, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BattleInitNtf cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BattleInitNtf result;
      
      private BattleInitNtf PrepareBuilder() {
        if (resultIsReadOnly) {
          BattleInitNtf original = result;
          result = new BattleInitNtf();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BattleInitNtf MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Protocol.BattleInitNtf.Descriptor; }
      }
      
      public override BattleInitNtf DefaultInstanceForType {
        get { return global::Protocol.BattleInitNtf.DefaultInstance; }
      }
      
      public override BattleInitNtf BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BattleInitNtf) {
          return MergeFrom((BattleInitNtf) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BattleInitNtf other) {
        if (other == global::Protocol.BattleInitNtf.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBattleInitCfg) {
          BattleInitCfg = other.BattleInitCfg;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_battleInitNtfFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _battleInitNtfFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasBattleInitCfg = input.ReadString(ref result.battleInitCfg_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBattleInitCfg {
        get { return result.hasBattleInitCfg; }
      }
      public string BattleInitCfg {
        get { return result.BattleInitCfg; }
        set { SetBattleInitCfg(value); }
      }
      public Builder SetBattleInitCfg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBattleInitCfg = true;
        result.battleInitCfg_ = value;
        return this;
      }
      public Builder ClearBattleInitCfg() {
        PrepareBuilder();
        result.hasBattleInitCfg = false;
        result.battleInitCfg_ = "";
        return this;
      }
    }
    static BattleInitNtf() {
      object.ReferenceEquals(global::Protocol.ProtoAvatar.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
