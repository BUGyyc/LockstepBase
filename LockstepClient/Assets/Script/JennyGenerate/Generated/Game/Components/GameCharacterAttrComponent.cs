//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CharacterAttrComponent characterAttr { get { return (CharacterAttrComponent)GetComponent(GameComponentsLookup.CharacterAttr); } }
    public bool hasCharacterAttr { get { return HasComponent(GameComponentsLookup.CharacterAttr); } }

    public void AddCharacterAttr(Lockstep.LFloat newHp, Lockstep.LFloat newMp) {
        var index = GameComponentsLookup.CharacterAttr;
        var component = (CharacterAttrComponent)CreateComponent(index, typeof(CharacterAttrComponent));
        component.hp = newHp;
        component.mp = newMp;
        AddComponent(index, component);
    }

    public void ReplaceCharacterAttr(Lockstep.LFloat newHp, Lockstep.LFloat newMp) {
        var index = GameComponentsLookup.CharacterAttr;
        var component = (CharacterAttrComponent)CreateComponent(index, typeof(CharacterAttrComponent));
        component.hp = newHp;
        component.mp = newMp;
        ReplaceComponent(index, component);
    }

    public void RemoveCharacterAttr() {
        RemoveComponent(GameComponentsLookup.CharacterAttr);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCharacterAttr;

    public static Entitas.IMatcher<GameEntity> CharacterAttr {
        get {
            if (_matcherCharacterAttr == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CharacterAttr);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCharacterAttr = matcher;
            }

            return _matcherCharacterAttr;
        }
    }
}
