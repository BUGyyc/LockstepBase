//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SkillComponent skill { get { return (SkillComponent)GetComponent(GameComponentsLookup.Skill); } }
    public bool hasSkill { get { return HasComponent(GameComponentsLookup.Skill); } }

    public void AddSkill(uint newSkillId, bool newShootSkill, Lockstep.LVector3 newShootDir) {
        var index = GameComponentsLookup.Skill;
        var component = (SkillComponent)CreateComponent(index, typeof(SkillComponent));
        component.skillId = newSkillId;
        component.shootSkill = newShootSkill;
        component.shootDir = newShootDir;
        AddComponent(index, component);
    }

    public void ReplaceSkill(uint newSkillId, bool newShootSkill, Lockstep.LVector3 newShootDir) {
        var index = GameComponentsLookup.Skill;
        var component = (SkillComponent)CreateComponent(index, typeof(SkillComponent));
        component.skillId = newSkillId;
        component.shootSkill = newShootSkill;
        component.shootDir = newShootDir;
        ReplaceComponent(index, component);
    }

    public void RemoveSkill() {
        RemoveComponent(GameComponentsLookup.Skill);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSkill;

    public static Entitas.IMatcher<GameEntity> Skill {
        get {
            if (_matcherSkill == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Skill);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSkill = matcher;
            }

            return _matcherSkill;
        }
    }
}
